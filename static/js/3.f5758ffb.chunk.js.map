{"version":3,"sources":["views/Views.module.css","components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","contacts","some","contact","toast","configure","error","onAddContact","reset","this","onSubmit","className","styles","form","formLabel","formInput","type","onChange","btn","disabled","length","Component","mapDispatchToProps","contactsOperations","addContact","connect","contactsSelectors","getContacts","ContactListItem","onDeleteContact","item","onClick","deleteContact","getVisibleContacts","list","map","id","key","onChangeFilter","contactsActions","changeFilter","getFilter","container","searchTitle","ContactsView","onFetchContacts","isLoadingContacts","Loader","title","fetchContacts","getLoading"],"mappings":"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","file":"static/js/3.f5758ffb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Views_container__2fptq\",\"img\":\"Views_img__RScqy\",\"form\":\"Views_form__3vkmM\",\"title\":\"Views_title__qUzH9\",\"input\":\"Views_input__H7X-O\",\"formLabel\":\"Views_formLabel__2lo4s\",\"btn\":\"Views_btn__3Ejf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Iore\",\"formInput\":\"ContactForm_formInput__ZRGZ3\",\"formLabel\":\"ContactForm_formLabel__uLGZt\",\"btn\":\"ContactForm_btn__3vUKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3S7sQ\",\"btn\":\"ContactListItem_btn__2KpfC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2YIsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2hd_U\",\"searchTitle\":\"Filter_searchTitle__XGMO0\",\"formInput\":\"Filter_formInput__3RVmA\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast.configure();\r\n      toast.error(name + ` is alredy in contacts`);\r\n    } else {\r\n      this.props.onAddContact(name, number);\r\n    }\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <div>\r\n          <label className={styles.formLabel}>\r\n            Name\r\n            <input\r\n              className={styles.formInput}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label className={styles.formLabel}>\r\n            Number\r\n            <input\r\n              className={styles.formInput}\r\n              type=\"tel\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <button\r\n          className={styles.btn}\r\n          type=\"submit\"\r\n          disabled={!name.length || !number.length}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { item, btn } from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ name, number, onDeleteContact }) {\r\n  return (\r\n    <div className={item}>\r\n      <p>\r\n        {name}:{number}\r\n      </p>\r\n      <button className={btn} type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../../redux/contacts';\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts &&\r\n        contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.item}>\r\n            <ContactListItem\r\n              name={name}\r\n              number={number}\r\n              onDeleteContact={() => onDeleteContact(id)}\r\n            />\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onDeleteContact: contactsOperations.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div className={styles.container}>\r\n    <p className={styles.searchTitle}>Find contacts by name</p>\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n      className={styles.formInput}\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from '../redux/contacts';\r\n\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport Loader from '../components/Loader/Loader';\r\n\r\nimport styles from './Views.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, isLoadingContacts } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {isLoadingContacts && <Loader />}\r\n        <h2 className={styles.title}>Phonebook</h2>\r\n        <ContactForm />\r\n        {contacts.length > 0 && <h3 className={styles.title}>Contacts</h3>}\r\n        {contacts.length > 2 && <Filter />}\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}