{"version":3,"sources":["redux/theme/themeActions.js","redux/theme/themeReducer.js","redux/store.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/Navigation/AuthNav.js","redux/theme/themeSelectors.js","context/ThemeContext.js","components/Toggler/Toggler.js","components/Navigation/NavBar.js","components/Layout/Layout.js","routes.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","AppContainer.js","index.js","components/Navigation/Navigation.module.css","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","components/Toggler/Toggler.module.css","redux/contacts/contactsReducer.js","components/UserMenu/UserMenu.module.css","redux/contacts/contactsActions.js","components/Loader/Loader.js","components/Layout/Layout.module.css","redux/auth/authActions.js","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/auth/authReducer.js"],"names":["toggleTheme","createAction","theme","isChecked","payload","themeConfig","createReducer","themeActions","state","combineReducers","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","themeReducer","auth","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","isAuthenticated","authSelectors","style","styles","nav","to","exact","className","link","activeClassName","activeLink","email","getUserEmail","onLogout","authOperations","logOut","container","name","btn","type","onClick","AuthNav","fontColor","bodyBg","Toggler","React","createContext","this","props","background","themeSelector","label","switch","checked","onChange","slider","Component","mapDispatchToProps","themeSelectors","header","children","color","NavBar","path","component","lazy","private","restricted","routeProps","render","App","fallback","Loader","routes","map","route","contactsSelectors","getContacts","AppContainer","onGetCurrentUser","onFetchContacts","contactsOperations","fetchContacts","getCurrentUser","visibleContacts","getVisibleContacts","isLoadingContacts","getLoading","ReactDOM","loading","document","getElementById","module","exports","addContact","number","dispatch","contactsActions","addContactRequest","axios","post","then","res","addContactSuccess","data","catch","error","addContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","filter","createSelector","contact","toLowerCase","includes","action","changeFilter","height","width","registerRequest","registerSuccess","registerError","logInRequest","logInSuccess","logInError","logOutRequest","logOutSuccess","logOutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","register","credentials","authActions","response","logIn","getState","persistedToken","message","user","initialUserState","_"],"mappings":"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","file":"static/js/main.5b4e2b0b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst toggleTheme = createAction('theme/toggleTheme', (theme, isChecked) => ({\r\n  payload: {\r\n    theme: {\r\n      isChecked: false,\r\n      themeConfig: 'light',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default {\r\n  toggleTheme,\r\n};\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n\r\nimport themeActions from './themeActions';\r\n\r\nconst toggleTheme = state => {\r\n  return {\r\n    ...state,\r\n    themeConfig: state.themeConfig === 'light' ? 'dark' : 'light',\r\n  };\r\n};\r\n\r\nconst toggleChecked = state => {\r\n  return {\r\n    ...state,\r\n    isChecked: !state.isChecked,\r\n  };\r\n};\r\n\r\nconst themeConfig = createReducer(\r\n  { themeConfig: 'light' },\r\n  {\r\n    [themeActions.toggleTheme]: toggleTheme,\r\n  },\r\n);\r\n\r\nconst isChecked = createReducer(\r\n  { isChecked: false },\r\n  {\r\n    [themeActions.toggleTheme]: toggleChecked,\r\n  },\r\n);\r\n\r\nexport default combineReducers({\r\n  themeConfig,\r\n  isChecked,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport themeReducer from './theme/themeReducer';\r\nimport { authReducer } from './auth/';\r\n// import logger from 'redux-logger';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    theme: themeReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // middleware: [...getDefaultMiddleware(), logger],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav style={styles.nav}>\r\n    <NavLink\r\n      to=\"/\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Home\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ email, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <span style={styles.name}> {email}</span>\r\n    <button className={styles.btn} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  email: authSelectors.getUserEmail(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from './Navigation.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div className={styles.container}>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Sign up\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      className={styles.link}\r\n      activeClassName={styles.activeLink}\r\n    >\r\n      Log in\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","const getThemeConfig = state => state.theme.themeConfig;\r\nconst getIsChecked = state => state.theme.isChecked;\r\n\r\nexport default {\r\n  getThemeConfig,\r\n  getIsChecked,\r\n};\r\n","import React from 'react';\r\n\r\nexport const themeConfig = {\r\n  light: {\r\n    fontColor: '#333333',\r\n    bodyBg: 'white',\r\n  },\r\n  dark: {\r\n    fontColor: 'white',\r\n    bodyBg: '#333333',\r\n  },\r\n};\r\n\r\nconst ThemeContext = React.createContext(themeConfig.light);\r\nexport default ThemeContext;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport styles from './Toggler.module.css';\r\nimport themeActions from '../../redux/theme/themeActions';\r\nimport themeSelectors from '../../redux/theme/themeSelectors';\r\nimport { themeConfig } from '../../context/ThemeContext';\r\n\r\nclass Toggler extends Component {\r\n  render() {\r\n    const { theme, toggleTheme, isChecked } = this.props;\r\n    return (\r\n      <div\r\n        style={{\r\n          background:\r\n            theme.themeConfig === 'light'\r\n              ? themeConfig.light.bodyBg\r\n              : themeConfig.dark.bodyBg,\r\n        }}\r\n        className={styles.themeSelector}\r\n      >\r\n        <span className={styles.label}></span>\r\n        <label className={styles.switch}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={isChecked.isChecked}\r\n            onChange={toggleTheme}\r\n          />\r\n          <span className={styles.slider}></span>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isChecked: themeSelectors.getIsChecked(state),\r\n  theme: themeSelectors.getThemeConfig(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toggleTheme: themeActions.toggleTheme,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toggler);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport Toggler from '../Toggler/Toggler';\r\n\r\nimport styles from './Navigation.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <>\r\n    <Toggler />\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  </>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport NavBar from '../Navigation/NavBar';\r\n\r\nimport { themeConfig } from '../../context/ThemeContext';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport themeSelectors from '../../redux/theme/themeSelectors';\r\n\r\nimport styles from './Layout.module.css';\r\nconst Layout = ({ children, theme }) => (\r\n  <div\r\n    style={{\r\n      background:\r\n        theme.themeConfig === 'light'\r\n          ? themeConfig.light.bodyBg\r\n          : themeConfig.dark.bodyBg,\r\n      color:\r\n        theme.themeConfig === 'light'\r\n          ? themeConfig.light.fontColor\r\n          : themeConfig.dark.fontColor,\r\n    }}\r\n    className={styles.container}\r\n  >\r\n    <NavBar />\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  theme: themeSelectors.getThemeConfig(state),\r\n  isChecked: themeSelectors.getIsChecked(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import { lazy } from 'react';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    label: 'Home',\r\n    exact: true,\r\n    component: lazy(() => import('./views/HomeView')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Register',\r\n    exact: true,\r\n    component: lazy(() => import('./views/RegisterView')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    exact: true,\r\n    component: lazy(() => import('./views/LoginView')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    exact: true,\r\n    component: lazy(() => import('./views/ContactsView')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport { contactsSelectors } from './redux/contacts';\n\nimport Loader from './components/Loader/Loader';\nimport Layout from './components/Layout/Layout';\n\nimport routes from './routes';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n          <Suspense\n            fallback={\n              <>\n                <Loader />\n              </>\n            }\n          >\n            <Switch>\n              {routes.map(route =>\n                route.private ? (\n                  <PrivateRoute key={route.label} {...route} />\n                ) : (\n                  <PublicRoute key={route.label} {...route} />\n                ),\n              )}\n            </Switch>\n          </Suspense>\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport App from './App';\r\n\r\nimport { authOperations } from './redux/auth';\r\nimport { contactsOperations, contactsSelectors } from './redux/contacts';\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <App {...this.props} {...this.state}>\r\n          {this.props.children}\r\n        </App>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n  visibleContacts: contactsSelectors.getVisibleContacts(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './AppContainer';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navigation_header__2yff7\",\"container\":\"Navigation_container__19n-b\",\"link\":\"Navigation_link__2WoIp\",\"activeLink\":\"Navigation_activeLink__3VmZp\"};","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(res => dispatch(contactsActions.addContactSuccess(res.data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(contactsActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.contacts;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"Toggler_themeSelector__np613\",\"label\":\"Toggler_label__2C_CB\",\"switch\":\"Toggler_switch__H_ybb\",\"slider\":\"Toggler_slider__2MZT5\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport contactsActions from './contactsActions';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst contacts = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: addContact,\r\n  [contactsActions.deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (state, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.fetchContactsRequest]: () => true,\r\n  [contactsActions.fetchContactsSuccess]: () => false,\r\n  [contactsActions.fetchContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.deleteContactRequest]: () => true,\r\n  [contactsActions.deleteContactSuccess]: () => false,\r\n  [contactsActions.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"UserMenu_btn__36xSF\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nconst deleteContactError = createAction('contacts/deleteError');\r\n\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return <Loader type=\"ThreeDots\" color=\"#555\" height={80} width={80} />;\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1vA8L\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst logInRequest = createAction('auth/loginRequest');\r\nconst logInSuccess = createAction('auth/loginSuccess');\r\nconst logInError = createAction('auth/loginError');\r\n\r\nconst logOutRequest = createAction('auth/logoutRequest');\r\nconst logOutSuccess = createAction('auth/logoutSuccess');\r\nconst logOutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logOutRequest,\r\n  logOutSuccess,\r\n  logOutError,\r\n  logInRequest,\r\n  logInSuccess,\r\n  logInError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.logInRequest());\r\n\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.logInSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.logInError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error.message));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logOutRequest());\r\n\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logOutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logOutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const isAuthenticated = state => state.auth.token;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport default { isAuthenticated, getUserEmail };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logInSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logOutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logInSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logOutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.logInError]: (_, { payload }) => payload,\r\n  [authActions.logOutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n"],"sourceRoot":""}